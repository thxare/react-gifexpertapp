{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SAGI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+CCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAKkB,IAAKR,IACrB,kCAAKA,SCFJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SACtB,ECHwB,SAACA,GAGzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFC,YAAW,WACPZ,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAGZ,CAACtB,IAGGuB,EDrB0BM,CAAa7B,GAAjCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAKtB,IACHsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZxBmB,EAAgB,WAGzB,MAAoC5C,mBAAS,CAAC,kBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAMA,OACI,gCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEAA,SAAWA,GADJA,YAS/BhB,EAAYgD,UAAY,CAEpB/C,cAAegD,IAAUC,KAAKC,Y,MC3BlCC,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.9bc6539b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setinputValue(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setcategories(cats => [inputValue, ...cats]);\r\n            setinputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=KtD6gHeJYq46HoOb7sTAf7mjDX35Bwis`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src= {url} alt={title}></img>\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n             {loading && <p>Loading</p>}\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {//efectos no pueden ser async\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    console.log(imgs)\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 3000)\r\n            });\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport PropTypes from 'prop-types'\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n\r\n    const [categories, setcategories] = useState(['One punch man'])\r\n    // const handleAdd = () => {\r\n    //     setcategories([...categories, {inputValue}])\r\n\r\n\r\n    // }\r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setcategories={setcategories} />\r\n            <hr />\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                       \r\n                        <GifGrid\r\n                        key = {category}\r\n                        category= {category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setcategories: PropTypes.func.isRequired,\r\n}\r\n\r\n// export default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\n\n\n\nimport './index.css';\n\n\nReactDOM.render(\n\n  <GiftExpertApp />,\n\n  document.getElementById('root')\n);\n\n//Crear componente llamado GiftExpertApp\n//h2 que diga giftExpertApp\n//abajo un hr\n\n"],"sourceRoot":""}